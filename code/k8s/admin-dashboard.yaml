apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-dashboard-config
  namespace: apollo11
data:
  DATABASE_URL: "postgres://apollo11:apollo11@postgres:5432/apollo11?sslmode=disable"
  REDIS_URL: "redis://redis:6379"
  CORE_API_URL: "http://core-api:8080"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-dashboard
  namespace: apollo11
  labels:
    app: admin-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-dashboard
  template:
    metadata:
      labels:
        app: admin-dashboard
    spec:
      containers:
      - name: admin-dashboard
        image: apollo11-admin-dashboard:latest
        ports:
        - containerPort: 8501
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: admin-dashboard-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: admin-dashboard-config
              key: REDIS_URL
        - name: CORE_API_URL
          valueFrom:
            configMapKeyRef:
              name: admin-dashboard-config
              key: CORE_API_URL
        livenessProbe:
          httpGet:
            path: /
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8501
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres -p 5432 -U apollo11; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-core-api
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -f http://core-api:8080/health; do echo waiting for core-api; sleep 2; done;']
      - name: wait-for-redis
        image: redis:7-alpine
        command: ['sh', '-c', 'until redis-cli -h redis ping; do echo waiting for redis; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: admin-dashboard
  namespace: apollo11
  labels:
    app: admin-dashboard
spec:
  ports:
  - port: 8501
    targetPort: 8501
    protocol: TCP
  selector:
    app: admin-dashboard
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-dashboard-ingress
  namespace: apollo11
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: apollo11-admin.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard
            port:
              number: 8501
