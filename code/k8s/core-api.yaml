apiVersion: v1
kind: ConfigMap
metadata:
  name: core-api-config
  namespace: apollo11
data:
  DATABASE_URL: "postgres://apollo11:apollo11@postgres:5432/apollo11?sslmode=disable"
  REDIS_URL: "redis://redis:6379"
  PORT: "8080"

---
apiVersion: v1
kind: Secret
metadata:
  name: core-api-secret
  namespace: apollo11
type: Opaque
data:
  JWT_SECRET: YXBvbGxvMTEtc2VjcmV0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==  # apollo11-secret-key-change-in-production base64 encoded

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: core-api
  namespace: apollo11
  labels:
    app: core-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: core-api
  template:
    metadata:
      labels:
        app: core-api
    spec:
      containers:
      - name: core-api
        image: apollo11-core-api:latest
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: core-api-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: core-api-config
              key: REDIS_URL
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: core-api-config
              key: PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: core-api-secret
              key: JWT_SECRET
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres -p 5432 -U apollo11; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: redis:7-alpine
        command: ['sh', '-c', 'until redis-cli -h redis ping; do echo waiting for redis; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: core-api
  namespace: apollo11
  labels:
    app: core-api
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: core-api
  type: ClusterIP
