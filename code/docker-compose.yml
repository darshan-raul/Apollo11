version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: apollo11-postgres
    environment:
      POSTGRES_DB: apollo11
      POSTGRES_USER: apollo11
      POSTGRES_PASSWORD: apollo11
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - apollo11-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apollo11 -d apollo11"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for pub/sub messaging
  redis:
    image: redis:7-alpine
    container_name: apollo11-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - apollo11-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Core API (Golang)
  core-api:
    build:
      context: ./core-api
      dockerfile: Dockerfile
    container_name: apollo11-core-api
    environment:
      DATABASE_URL: postgres://apollo11:apollo11@postgres:5432/apollo11?sslmode=disable
      REDIS_URL: redis://redis:6379
      JWT_SECRET: apollo11-secret-key-change-in-production
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - apollo11-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Simulator Service (Python)
  simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: apollo11-simulator
    environment:
      REDIS_URL: redis://redis:6379
      SIMULATION_DELAY_MIN: 3
      SIMULATION_DELAY_MAX: 8
      SUCCESS_RATE: 0.8
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - apollo11-network
    restart: unless-stopped

  # Frontend (FastAPI)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: apollo11-frontend
    environment:
      DATABASE_URL: postgresql://apollo11:apollo11@postgres:5432/apollo11?sslmode=disable
      CORE_API_URL: http://core-api:8080
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      core-api:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - apollo11-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Dashboard (Streamlit)
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: apollo11-admin-dashboard
    environment:
      DATABASE_URL: postgres://apollo11:apollo11@postgres:5432/apollo11?sslmode=disable
      REDIS_URL: redis://redis:6379
      CORE_API_URL: http://core-api:8080
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
      core-api:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - apollo11-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8501/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  apollo11-network:
    driver: bridge
